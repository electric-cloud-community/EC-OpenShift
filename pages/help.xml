<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
    <title>@PLUGIN_KEY@ Plugin</title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css" type="text/css" media="screen"/>
</head>
<body>
<!--
    Generated by PluginWizardHelp
    https://github.com/electric-cloud/PluginWizardHelp
    Do *NOT* edit manually, use help file generation.
-->
<div class="help">
    <h1>@PLUGIN_KEY@</h1>
    <p>Plugin version @PLUGIN_VERSION@</p>
    
    <p>Revised on March 06, 2019</p>
    
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade"/>
    <h1>Contents</h1>
    <ul>
    <li><a href="#overview">Overview</a></li>
    
    
    <li><a href="#prerequisites">Prerequisites</a></li>
    

    

    
    <li><a href="#CreateConfiguration">Plugin Configuration</a></li>
    

    <li><a href="#procedures">Plugin Procedures</a></li>
    <li>Micro Service Deployment</li><ul><li><a href="#DeployService">Deploy Service</a></li><li><a href="#UndeployService">Undeploy Service</a></li></ul><li>Micro Service Discovery and Import</li><ul><li><a href="#Discover">Discover</a></li><li><a href="#ImportMicroservices">Import Microservices</a></li></ul><li>Cluster Management</li><ul><li><a href="#ProvisionClusteronESX">Provision Cluster on ESX</a></li><li><a href="#CheckCluster">Check Cluster</a></li></ul>
    
    
    <li><a href="#releaseNotes">Release Notes</a></li>
</ul>
    <h1>Overview</h1>
    <p><p>EC-OpenShift plugin integrates with the 
<a href="https://www.openshift.com/" target="_blank">https://www.openshift.com/</a>
 and helps you manage microservices based applications deployments and releases on both on-premise as well as hosted OpenShift offerings.</p>
<p>In case of on-premise setup, plugin helps you in addition to install 
<a href="https://www.openshift.org/" target="_blank">https://www.openshift.org/</a>
. Plugin supports the following topologies:</p>
<ul>
<li><strong>Minimal</strong>: Sets up one OpenShift master, embedded etcd and user supplied number of nodes. This is typically used for creating an OpenShift cluster for a Development environment .</li>
<li><strong>Multiple Etcd</strong>: Sets up one OpenShift master, separate cluster of three etcd instances and user supplied number of nodes.</li>
<li><strong>Multiple Etcd + HAProxy</strong>: Highly available setup with three OpenShift masters, cluster of three etcd instances and user supplied number of nodes. This is meant for a production
environment.</li>
</ul>
</p>
    
    
    <div id="prerequisites">
        <h1>Prerequisites</h1>
        <ul>
<li>EC-Kubernetes plugin version 1.0.5 or higher</li>
<li>If using the Provision Cluster on ESX procedure, EC-ESX plugin version 2.3.*</li>
<li>RedHat OpenShift 3 cluster - RedHat OpenShift Online, RedHat OpenShift Dedicated, or RedHat OpenShift On-premise.</li>
<li>For microservices deployment using hosted OpenShift offerings, plugin assumes that you have a service account which has appropriate access on projects that you intend to use through this plugin.  Run the following commands to create a service account, grant the required access for deploying services in the OpenShift cluster, and retrieve the bearer token that will be used when creating the plugin configuration. The service account bearer token will be used to authenticate against the Kubernetes and OpenShift APIs for managing projects (namespaces) and deploying services.</li>
</ul>
<pre><code>    # Login using cluster admin credentials
    oc login cluster_IP_here:8443 --username=&lt;cluster_admin_user_here&gt; --password=&lt;admin_user_password_here&gt;

    # Create a service account in the current project say 'us-project-test'. Full name of the serviceaccount will be system:serviceaccount:us-project-test:erobot
    oc create serviceaccount erobot

    # Grant the following roles to allow the service account create resources in the cluster such as projects.
    sudo ./oadm --config='openshift.local.config/master/openshift-master.kubeconfig' policy add-cluster-role-to-user edit system:serviceaccount:us-project-test:erobot
    sudo ./oadm --config='openshift.local.config/master/openshift-master.kubeconfig' policy add-cluster-role-to-user cluster-reader system:serviceaccount:us-project-test:erobot

    # Describe the service account to discover the secret token name
    oc describe serviceaccount erobot

    # Describe the secret token to get the token value, say 'erobot-token-8zlsh'
    oc describe secret erobot-token-8zlsh
    or
    oc describe secret erobot-token-8zlsh &gt; oc-secret-with-token.txt

    # You will need to provide this token value in the plugin configuration for the Service Account Key value.
</code></pre>

    </div>
    

    
    <!--TODO custom blocks-->

    
    <div id="CreateConfiguration">
        <a name='CreateConfiguration' id="CreateConfiguration"> </a>
        <h1>Plugin Configurations</h1>

        <p>
            Plugin configurations are sets of parameters that apply
            across some or all of the plugin procedures. They
            reduce repetition of common values, create
            predefined parameter sets for end users, and
            securely store credentials where needed. Each configuration
            is given a unique name that is entered in designated
            parameters on procedures that use them.<br /><br />
        </p>

        <h3>Creating Plugin Configurations</h3>
        <p>To create plugin configurations in ElectricFlow,
            do these steps:</p>

        <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
        <li>Find the @PLUGIN_NAME@ row.</li>
        <li>Click <b>Configure</b> to open the
             Configurations page.</li>
        <li>Click <b>Create Configuration</b>.</li>
        
        Configuration Parameters
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>Unique name for the plugin configuration.</td>
            </tr>
            
            <tr>
                <td >Description</td>
                <td>Description for the plugin configuration.</td>
            </tr>
            
            <tr>
                <td class="required">Openshift API Endpoint</td>
                <td>The endpoint at which Openshift API will be reachable. Example, https://192.168.20.20:8443.</td>
            </tr>
            
            <tr>
                <td class="required">Service Account</td>
                <td>The bearer token for the service account that has access to create resources in the Openshift cluster</td>
            </tr>
            
            <tr>
                <td >Kubernetes Version</td>
                <td>Kubernetes version running on the Openshift cluster master</td>
            </tr>
            
            <tr>
                <td >Test Connection</td>
                <td>Check this checkbox to verify connectivity to the Openshift cluster master.</td>
            </tr>
            
            <tr>
                <td >Log Level</td>
                <td>Log level to use for logging output. Error=4, Warning=3, Info=2, Debug=1.</td>
            </tr>
            
            </tbody>
        </table>
        
        <img src="../../plugins/@PLUGIN_KEY@/images/ConfigurationParameters.png" alt="screenshot" />

        
    </div>
    

    <h1 id="procedures">Plugin Procedures</h1>
    
    

    
    <div id="DeployService">
        <h2>Deploy Service</h2>
        
        
        <p>Deploys a service, creating or updating pod definitions, service and deployment in the OpenShift project on the cluster. The OpenShift project(namespace) is created if it does not exist.</p>
        
        
        <h3>Deploy Service Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Service Name</td>
                <td>The name of the service in ElectricFlow that encapsulates the service to be deployed on the OpenShift cluster.</td>
            </tr>
            
            <tr>
                <td >Service Revision ID</td>
                <td>Revision Id of the service in ElectricFlow.</td>
            </tr>
            
            <tr>
                <td class="required">Project Name</td>
                <td>The name of the project that the service belongs to. In case of an application-level service it also owns the application.</td>
            </tr>
            
            <tr>
                <td >Application Name</td>
                <td>The name of the application that the service belongs to. Not applicable for a top-level service.</td>
            </tr>
            
            <tr>
                <td >Application Revision ID</td>
                <td>Revision Id of the application version that the service belongs to.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>The name of the cluster in ElectricFlow that encapsulates the OpenShift cluster on which the service is to be deployed.</td>
            </tr>
            
            <tr>
                <td >Cluster Or Environment Project Name</td>
                <td>The name of the project that the cluster belongs to if it is a top-level project cluster. Or the name of the project that the environment belongs to if it is an environment-scoped cluster.</td>
            </tr>
            
            <tr>
                <td >Environment Name</td>
                <td>The name of the environment that the cluster belongs to. Not applicable for a top-level project cluster.</td>
            </tr>
            
            <tr>
                <td >Results Property Sheet</td>
                <td>Name of the property sheet where the output properties for the deployed service will be saved. If not specified, will default to '/myParent/parent'.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="UndeployService">
        <h2>Undeploy Service</h2>
        
        
        <p>Undeploys a previously deployed service on the OpenShift cluster</p>
        
        
        <h3>Undeploy Service Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Service Name</td>
                <td>The name of the service in ElectricFlow that encapsulates the service that was previously deployed on the OpenShift cluster.</td>
            </tr>
            
            <tr>
                <td >Service Revision ID</td>
                <td>Revision Id of the service in ElectricFlow.</td>
            </tr>
            
            <tr>
                <td class="required">Project Name</td>
                <td>The name of the project that the service belongs to. In case of an application-level service it also owns the application.</td>
            </tr>
            
            <tr>
                <td >Application Name</td>
                <td>The name of the application that the service belongs to. Not applicable for a top-level service.</td>
            </tr>
            
            <tr>
                <td >Application Revision ID</td>
                <td>Revision Id of the application version that the service belongs to.</td>
            </tr>
            
            <tr>
                <td class="required">Environment Name</td>
                <td>The name of the environment that the cluster belongs to.</td>
            </tr>
            
            <tr>
                <td >Environment Project Name</td>
                <td>The name of the project that the environment belongs to. If not specified, the environment is assumed to be in the same project as the service.</td>
            </tr>
            
            <tr>
                <td >Cluster Name</td>
                <td>The name of the cluster in the environment on which the service was previously deployed. If not specified, the application tier mapping will be used to find the cluster name.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="Discover">
        <h2>Discover</h2>
        
        
        Automatically create microservice models in ElectricFlow for the services and the pods discovered within a project on a OpenShift cluster.
<div>
    <ol>
        <li><b>Select your method of discovery from a OpenShift Cluster</b>  There are two options for connecting to OpenShift for discovery
            <ul>
                <li><b>Existing ElectricFlow Environment and Cluster</b>  Use the Cluster configuration details in an existing ElectricFlow environment to connect to OpenShift. Enter details for the existing environment and cluster in the following parameters:
                    <ul>
                        <li>Environment Project Name: The project containing the existing environment</li>
                        <li>Environment Name:  the name of an existing environment that contains the OpenShift backend cluster to be discovered</li>
                        <li>Cluster Name: The name of the ElectricFlow cluster in the environment above that represents the OpenShift cluster</li>
                    </ul></li>
                <li><b>OpenShift Connection Details</b>  Enter OpenShift endpoint and Account details to directly connect to the endpoint and discover the clusters and pods.  Enter the endpoint and account details in the following parameters:
                    <ul>
                        <li>OpenShift Endpoint: The endpoint where the OpenShift endpoint will be reachable</li>
                        <li>Service Account API Token</li>
                        <li><i>If selecting this connection option, you can optionally enter a new values for Environment Name and Cluster Name parameters, to create a new environment and cluster in ElectricFlow based on the discovered services and pods.</i></li>
                    </ul>
                </li>
            </ul></li>
        <li><b>Determine how the discovered microservices will be created in ElectricFlow</b>
            <ul>
                <li><b>Create the microservices individually at the top-level within the project.</b> All discovered microservices will be created at the top-level.  Enter the following parameters:
                    <ul>
                        <li>Project Name: Enter the name of the project where the microservices will be created</li>
                    </ul>
                </li>
                <li><b>Create the Microservices within an application in ElectricFlow.</b> All discovered microservices will be created as services within a new application. Enter the following parameters:
                    <ul>
                        <li>Project Name: Enter the name of the project where the new application will be created</li>
                        <li>Create Microservices within and Application:  Select the checkbox</li>
                        <li>Application Name:  The name of a new application which will be created in ElectricFlow containing the discovered services</li>
                    </ul>
                </li></ul>
        </li>
    </ol>
</div>

        
        
            <p>Procedure looks for services and deployments on OpenShift
cluster and transfers data into ElectricFlow. Services found
in cluster will be mapped to Services objects in ElectricFlow,
then associated deployments will be found and containers
definitions retrieved from there.</p>
<p>If the object with the provided name already exists in the ElectricFlow, this object will be skipped and a warning message will be emitted to logs.</p>

        
        <h3>Discover Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Environment Project Name</td>
                <td>The project containing the existing environment, or where the new environment will be created.</td>
            </tr>
            
            <tr>
                <td class="required">Environment Name</td>
                <td>Provide the name of an existing environment that contains the OpenShift-backend cluster to be discovered. If the environment does not already exist, provide the OpenShift connection details below for discovery, and a new environment will be created.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>In an existing environment, provide the name of the ElectricFlow cluster representing the OpenShift cluster whose deployed services are to be discovered. If the environment does not already exist, provide the name of the cluster to be created in the new environment.</td>
            </tr>
            
            <tr>
                <td >OpenShift API Endpoint</td>
                <td>The endpoint at which the OpenShift API will be reachable. Must be an IP address or a resolvable DNS name. This field is required and used only if you are not providing an existing environment above for discovery.</td>
            </tr>
            
            <tr>
                <td >Service Account API Token</td>
                <td>Service account bearer token for a service account which has permissions to create resources in the OpenShift cluster. This field is required and used only if you are not providing an existing environment above for discovery.</td>
            </tr>
            
            <tr>
                <td class="required">OpenShift project</td>
                <td>The name of the OpenShift project within which the deployed services should be discovered. Default to 'default' namespace.</td>
            </tr>
            
            <tr>
                <td class="required">Project Name</td>
                <td>The name of project in which the discovered microservices will be created.</td>
            </tr>
            
            <tr>
                <td >Create Microservices within an Application</td>
                <td>(Optional) Select to create all discovered services in the OpenShift project within one application in ElectricFlow. If selected, then the application name must be provided. If unselected, microservices will be created at the top-level in the project.</td>
            </tr>
            
            <tr>
                <td >Application Name</td>
                <td>The name of the new application that will contain the microservices. Required only if 'Create Microservices within an Application' is selected.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="ImportMicroservices">
        <h2>Import Microservices</h2>
        
        
        
        Create microservices in ElectricFlow by importing an OpenShift template (YAML file) containing services and deployment configurations.
        <div>
            <ol>
                <li><b>Copy and enter the content of your template (YAML file)</b></li>
                <li><b>Determine how the new microservices will be created in ElectricFlow</b>
                <ul>
                    <li><b>Create the microservices individually at the top-level within the project.</b> All microservices will be created at the top-level. Enter the following parameters:
                    <ul>
                        <li>Project Name: Enter the name of the project where the microservices will be created</li>
                    </ul></li>
                    <li><b>Create the Microservices within an application in ElectricFlow.</b> All microservices will be created as services within a new application. Enter the following parameters:
                    <ul>
                        <li>Project Name: Enter the name of the project where the new application will be created</li>
                        <li>Create Microservices within and Application: Select the checkbox</li>
                        <li>Application Name:  The name of a new application which will be created in ElectricFlow containing the new services.</li>
                    </ul>
                    </li>
                </ul></li>
                <li><b>Optionally map the services to an existing Environment Cluster</b> Select an existing Environment that contains a cluster with OpenShift configuration details where the new microservices can be deployed. Enter the following parameters:
                <ul>
                    <li>Environment Project Name: The project containing the ElectricFlow environment where the services will be deployed.</li>
                    <li>Environment Name: The name of the existing environment that contains a cluster where the newly created microservice(s) will be deployed.</li>
                    <li>Cluster Name: The name of an existing EC-OpenShift backed cluster in the environment above where the newly created microservice(s) will be deployed.</li>
                </ul>
                </li>
            </ol>
        </div>
        
        
        
        <h3>Import Microservices Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">OpenShift Template Content (YAML File)</td>
                <td>Content of an OpenShift template (YAML file) containing related services and deployments definitions.</td>
            </tr>
            
            <tr>
                <td >Template Parameter Values</td>
                <td>Template parameter values to use. Format "paramName1=value1, paramName2=value2"</td>
            </tr>
            
            <tr>
                <td class="required">Project Name</td>
                <td>The name of the ElectricFlow project in which the application or microservices will be created.</td>
            </tr>
            
            <tr>
                <td >Create Microservices within an Application</td>
                <td>(Optional) Select to create all services defined in the template file within one application in ElectricFlow. If selected, then the application name must be provided. If not selected, microservices will be created at the top-level in the project.</td>
            </tr>
            
            <tr>
                <td >Application Name</td>
                <td>(Optional) The name of the new application that will contain the microservices. Required only if 'Create Microservices within an Application' is selected.</td>
            </tr>
            
            <tr>
                <td >Environment Project Name</td>
                <td>(Optional) The project containing the Environment where the services will be deployed.</td>
            </tr>
            
            <tr>
                <td >Environment Name</td>
                <td>(Optional) The name of an existing environment that contains a cluster where the newly created microservice(s) will be deployed.</td>
            </tr>
            
            <tr>
                <td >Cluster Name</td>
                <td>(Optional) The name of the existing ElectricFlow cluster representing a OpenShift cluster in the environment above where the newly created microservice(s) will be deployed.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="ProvisionClusteronESX">
        <h2>Provision Cluster on ESX</h2>
        
        
        <p>Provisions a OpenShift cluster. Pods, services, and replication controllers all run on top of a cluster.</p>
        
        
            <p>The procedure checks if the OpenShift cluster exists and is reachable with provided details. If not, then provisions a new one.<br/>
<p>The procedure uses ESX plugin's import procedure to setup underlying VMs.For system requirements, see <a href="https://docs.openshift.com/enterprise/3.0/install_config/install/prerequisites.html#install-config-install-prerequisites">here</a>.For networking requirements, see <a href="https://docs.openshift.org/latest/install_config/install/prerequisites.html#prereq-network-access">here</a>.
<br/></p>
<p>Once VMs are available, the procedure uses <a href="https://github.com/openshift/openshift-ansible">ansible scripts</a> provided by OpenShift to setup an OpenShift cluster. <br/>Below are the prerequisites to use this procedure:
<ol>
<li> Ansible (v2.2.0.0) must be installed on ElectricFlow agent machines and <b>'ansible-playbook'</b> command should be included in PATH. </li>
<li> <b>'htpasswd'</b> must be installed and included in PATH on ElectricFlow agent machine.</li>
<li> ElectricFlow agent machine should have passwordless SSH access to imported VMs.<br/></li>
<li>The plugin passes the hostname to OVF template using OVF property &quot;--prop:hostname=some_hostname&quot; while importing using OVF tool.</li>
<li>The OVF template must have a mechanism (<a href="https://github.com/vmware/open-vm-tools">'open-vm-tools'</a> is one such example) to read this OVF property and set its hostname accordingly. </li>
<li> It should also add &quot;127.0.0.1 some_hostname some_hostname.domain_name&quot; entry to /etc/hosts file.</li>
<li> <a href="https://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin/origin-docker-excluder-1.4.0-2.el7.noarch.rpm">'origin-docker-excluder'</a> and <a href="https://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin/origin-excluder-1.4.0-2.el7.noarch.rpm">'origin-excluder'</a> RPMs must be already installed on OVF template. </li>
</ol></p>
</p>

        
        <h3>Provision Cluster on ESX Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">ESX plugin configuration</td>
                <td>ESX plugin configuration name. ESX plugin is used create underlying VM hosts for OpenShift cluster setup by importing OVF templates.</td>
            </tr>
            
            <tr>
                <td class="required">ESX Datastore</td>
                <td>Name of the datastore to be used.</td>
            </tr>
            
            <tr>
                <td class="required">ESX Host</td>
                <td>Name of the host where virtual machines will be imported.</td>
            </tr>
            
            <tr>
                <td class="required">Path to OVF Tool</td>
                <td>Install location of the ovftool binary.</td>
            </tr>
            
            <tr>
                <td class="required">Path to OVF package</td>
                <td>Absoulte path to the directory where OVF packages are stored.</td>
            </tr>
            
            <tr>
                <td class="required">OpenShift Project</td>
                <td>The name of the OpenShift project to which the services and deployments will be deployed. If the project does not exist, it will be created during service deployment. The project name must match the regex [a-z0-9]([-a-z0-9]*[a-z0-9])? (e.g. 'my-name' or '123-abc').</td>
            </tr>
            
            <tr>
                <td class="required">OpenShift Service Account</td>
                <td>The name of service account to create after OpenShift cluster is setup.Service account name must match the regex [a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)* (e.g. 'example.com')</td>
            </tr>
            
            <tr>
                <td class="required">OpenShift VM name prefix</td>
                <td>Prefix to be prepended to VM names and their hostnames to uniquely distinguish them from other OpenShift setups. </td>
            </tr>
            
            <tr>
                <td class="required">OpenShift Plugin configuration Name</td>
                <td>Name OpenShift plugin configaration to create after OpenShift cluster is setup.</td>
            </tr>
            
            <tr>
                <td >OpenShift Master Node Memory (in MBs)</td>
                <td> Memory in MB for master VM(s).</td>
            </tr>
            
            <tr>
                <td >OpenShift Master Node CPUs</td>
                <td>Number of CPUs for master VM(s).</td>
            </tr>
            
            <tr>
                <td >OpenShift Worker Node Memory (in MBs)</td>
                <td>Memory in MB for node VMs.</td>
            </tr>
            
            <tr>
                <td >OpenShift Worker Node CPUs</td>
                <td>Number of CPUs for node VMs.</td>
            </tr>
            
            <tr>
                <td class="required">Topology</td>
                <td>Indicates which OpenShift topology to deploy</td>
            </tr>
            
            <tr>
                <td class="required">Number of worker nodes</td>
                <td>Number of nodes to add to the OpenShift cluster.</td>
            </tr>
            
            <tr>
                <td class="required">Domain Name</td>
                <td>Domain name to use for imported OpenShift VMs.(e.g. xyz.yourcompany.com)</td>
            </tr>
            
            <tr>
                <td class="required">User login to use</td>
                <td>The user to be used by ansible to login into VMs. The user should have preconfigured passwordless SSH access to the imported VMs.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="CheckCluster">
        <h2>Check Cluster</h2>
        
        
        <p>Checks that the configured OpenShift cluster is accessible using the given service account bearer token.</p>
        
        
            <p>
    The procedure checks if the OpenShift cluster exists and is reachable using the cluster details provided in the plugin configuration.
</p>

        
        <h3>Check Cluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration</td>
                <td>The name of an existing configuration which holds all the connection information for OpenShift cluster.</td>
            </tr>
            
            <tr>
                <td class="required">OpenShift Project</td>
                <td>The name of the OpenShift project to which the services and deployments should be deployed. If the project does not exist, it will be created during service deployment.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    

    

    

    <h1 id="releaseNotes">Release Notes</h1>
    
    <h3>@PLUGIN_KEY@ 1.5.3</h3>
    <ul>
        
        <li>Configurations can be created by users with "@" sign in a name.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.5.2</h3>
    <ul>
        
        <li>Fixed plugin documentation.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.5.1</h3>
    <ul>
        
        <li>Updated the plugin icon.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.5.0</h3>
    <ul>
        
        <li>Improved plugin promotion time.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.4.1</h3>
    <ul>
        
        <li>Fixed 'Import Microservices' procedure by the following:<ul><li>fixed handling of default values for template parameters;</li><li>fixed parsing of image URL for cases of non default registry and repository namespace which contains dots;</li><li>fixed parsing of service port name which may be used by route as target port reference;</li><li>procedure now can succeed without optional parameters related to environment mapping provided.</li></ul></li>
        
        <li>Fixed 'Deploy Service' procedure by the following - deploy of route can now succeed without hostname provided.</li>
        
        <li>Added 'Test Connection' step for 'EditConfiguration' procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.4.0</h3>
    <ul>
        
        <li>Configured the plugin to allow the ElectricFlow UI to create configs inline of procedure form.</li>
        
        <li>Added new procedures: Discovery, Import Microservices.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.3.2</h3>
    <ul>
        
        <li>Fixed non-ascii characters in help file.</li>
        
        <li>Added support for retrieving and creating the plugin configurations through the "Configurations" option on the application process step and the pipeline stage task editors.</li>
        
        <li>Configured the 'setup' procedure step that retrieves groovy dependency jars to run all subsequent procedure steps on the same resource.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.3.1</h3>
    <ul>
        
        <li><i>Requires EC-Kubernetes plugin version 1.0.5 or higher to be installed.</i></li>
        
        <li>Removed unused parameter <i>additionalAttributes</i> from container mapping configuration.</li>
        
        <li>When deploying a microservice through ElectricFlow on an OpenShift cluster, the plugin will now monitor the deployment progress in the cluster and cause the step to fail in case the deployment does not complete within the deployment timeout configured as part of the service mapping. The default timeout value is 120 seconds.</li>
        
        <li>When deploying a microservice through ElectricFlow on an OpenShift cluster, the service name to use in OpenShift can now be overridden through the service mapping.</li>
        
        <li>When deploying a microservice through ElectricFlow on an OpenShift cluster, the deployment name to use in the cluster can now be overridden through the service mapping. See section <b>Blue/Green Deployments</b> in the EC-Kubernetes plugin help for details on how this ability can be used to implement a blue/green deployment strategy.</li>
        
        <li>Added support for canary deployments. See section <b>Canary Deployments</b> in the EC-Kubernetes plugin help for details.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.3.0</h3>
    <ul>
        
        <li>Renamed <i>Provision Cluster</i> procedure to a more specific <i>Provision Cluster on ESX</i>. The parameters in the renamed procedure remain the same.</li>
        
        <li>Updated the 'provisionCluster' operation used during service deployment to use the 'Check Cluster' procedure that checks that the OpenShift cluster exists and is available for service deployments.</li>
        
        <li>Added procedure <i>Undeploy Service</i> to undeploy a previously deployed service.</li>
        
        <li>Added 'kubernetesVersion' parameter in the plugin configuration to allow the user to identify the Kubernetes version running on the Openshift cluster master. The parameter will default to '1.6' if no value is specified.</li>
        
    </ul>
    
</div>
</body>
</html>
