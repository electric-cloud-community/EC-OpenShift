apiVersion: v1
kind: Template
metadata:
  name: ${serviceName}
objects:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      ec-svc-id: 1285c29f-4182-11e8-beaf-b29bcf5f67b5
    name: ${serviceName}
  spec:
    deprecatedPublicIPs:
    - 172.29.100.131
    externalIPs:
    - 172.29.100.131
    ports:
    - name: servicehttptomcat01519748102941
      nodePort: 30270
      port: 8081
      protocol: TCP
      targetPort: http
    selector:
      ec-svc: $serviceName
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: test1
  spec:
    host: 10.200.1.101
    port:
      targetPort: servicehttptomcat01519748102941
    to:
      kind: Service
      name: $serviceName
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-06-18T13:04:05Z
        status: "True"
        type: Admitted
      host: 10.200.1.101
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: test2
  spec:
    host: 10.200.1.102
    port:
      targetPort: servicehttptomcat01519748102941
    to:
      kind: Service
      name: $serviceName
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-06-18T13:04:18Z
        status: "True"
        type: Admitted
      host: 10.200.1.102
      routerName: router
      wildcardPolicy: None
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      ec-svc: $serviceName
      ec-track: stable
    name: $serviceName
  spec:
    progressDeadlineSeconds: 120
    replicas: 1
    selector:
      matchLabels:
        ec-svc: $serviceName
        ec-track: stable
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          ec-svc: ${serviceName}
          ec-track: stable
        name: ${serviceName}
      spec:
        containers:
        - image: tomcat:7.0
          imagePullPolicy: IfNotPresent
          name: tomcat
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 255M
            requests:
              cpu: 100m
              memory: 128M
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-06-18T13:03:16Z
      lastUpdateTime: 2018-06-18T13:03:16Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2018-06-18T13:03:16Z
      lastUpdateTime: 2018-06-18T13:03:16Z
      message: Replica set "microservice-canary-2132197782" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata: {}
